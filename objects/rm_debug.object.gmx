<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>mode = 0;
selection = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_colour(c_white);
draw_set_valign(fa_bottom);
draw_text(5, room_height - 5, "Where it all started");

draw_set_halign(fa_right);

var text = "";

text += "File Version: " + string(FILEVERSION); text += "#";
text += "Game Version: " + string(GAMEVERSION); text += "#";
text += "Developer: " + string(DEVELOPER); text += "#";
text += "Mouse x: " + string(mouse_x); text += "#";
text += "Mouse y: " + string(mouse_y); text += "#";
text += "Mode " + string(mode); text += "#";
text += "Pres h for controls!";

draw_text(room_width - 5, room_height - 5, text);


draw_set_halign(fa_left);
draw_set_valign(fa_top);

if (keyboard_check_pressed(vk_f1)) mode = 1;
if (keyboard_check_pressed(vk_f2)) mode = 2;
if (keyboard_check_pressed(vk_f3)) mode = 3;
if (keyboard_check_pressed(vk_f4)) mode = 4;
if (keyboard_check_pressed(vk_f5)) mode = 5;
if (keyboard_check_pressed(vk_f6)) mode = 6;

if (keyboard_check_pressed(vk_f7)) show_debug_overlay(false);
if (keyboard_check_pressed(vk_f8)) show_debug_overlay(true);

if (keyboard_check_pressed(vk_f9)) selection = 0;
if (keyboard_check_pressed(vk_f10)) selection++;
if (keyboard_check_pressed(vk_f11)) selection--;

if (keyboard_check_pressed(ord("H"))) mode = -1;
if (keyboard_check_pressed(ord("J"))) mode = 0;

if (keyboard_check(ord("K"))) {
    background_visible[0] = true;
    background_visible[1] = true;
} else {
    background_visible[0] = false;
    background_visible[1] = false;
}

if (keyboard_check_pressed(ord(("L")))) {
    instance_create(0, 0, obj_editor);
    instance_create(0, 0, obj_menu);
}


if (mode == -1) {
    draw_set_halign(fa_right);
    draw_text(room_width - 5, 5, "
    F1: Objet selection
    F2: Music selection
    F3: Room selection
    F4: Menu position mode
    F5: Sprite previewer
    F6: Background previewer
    
    F7: Disable debug overlay
    F8: Enable debug overlay
    
    F9: Reset selection to zero
    F10: Increase selection
    F11: Decrease selection
    F12: Trigger (used in modes)
    
    H: This help
    J: Blank mode 1
    K: Original art
    L: Initialise debug editor (only run once)
    ");
    draw_set_halign(fa_left);
    if (keyboard_check_pressed(vk_f12)) {
        instance_create(mouse_x, mouse_y, selection);
    }
}

if (mode == 1) {
    draw_set_halign(fa_right);
    draw_text(room_width - 5, 5, "Object Selection: (" + string(selection) + ") - " + string(object_get_name(selection)));
    draw_set_halign(fa_left);
    if (keyboard_check_pressed(vk_f12)) {
        instance_create(mouse_x, mouse_y, selection);
    }
}

if (mode == 2) {
    draw_set_halign(fa_right);
    draw_text(room_width - 5, 5, "Music Selection: (" + string(selection) + ") - " + string(sound_get_name(selection)));
    draw_set_halign(fa_left);
    if (keyboard_check_pressed(vk_f12)) {
        obj_audio.audio_music_to_play = selection;
    }
}

if (mode == 3) {
    draw_set_halign(fa_right);
    draw_text(room_width - 5, 5, "Room Selection: (" + string(selection) + ") - " + string(room_get_name(selection)));
    draw_set_halign(fa_left);
    if (keyboard_check_pressed(vk_f12)) {
        room_goto(selection);
    }
}

if (mode == 4) {
    if (!font_exists(selection)) selection = 0;
    
    draw_set_font(selection);
    
    button_basic_clickable(mouse_x, mouse_y, 200, 30, c_black, c_orange, c_black, font_get_name(selection) + " - " + font_get_fontname(selection), undefined, "", 1);
}

if (mode == 5) {
    draw_set_halign(fa_right);
    draw_text(room_width - 5, 5, "Sprite Selection: (" + string(selection) + ") - " + string(sprite_get_name(selection)));
    draw_set_halign(fa_left);
    if (keyboard_check(vk_f12)) {
        draw_sprite(selection, 0, mouse_x, mouse_y);
    }
}

if (mode == 6) {
    draw_set_halign(fa_right);
    draw_text(room_width - 5, 5, "Background Selection: (" + string(selection) + ") - " + string(background_get_name(selection)));
    draw_set_halign(fa_left);
    if (keyboard_check(vk_f12)) {
        draw_background(selection, mouse_x, mouse_y);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
